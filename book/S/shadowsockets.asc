= ss安装及配置

配合 `proxychains` `polipo` `OmegaOptions` 使用效果更佳

== 服务端安装及配置

=== 开启bbr
升级内核
[console,bash]
----
rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org
yum install -y https://www.elrepo.org/elrepo-release-7.0-4.el7.elrepo.noarch.rpm
yum --enablerepo=elrepo-kernel install -y kernel-ml
lastest_kernel=`grep "menuentry 'CentOS Linux" /boot/grub2/grub.cfg|awk -F "'" '{print $2}'|head -n 1`
grub2-set-default "$lastest_kernel"
rm -f /boot/grub2/grub.cfg.bak
cp /boot/grub2/grub.cfg /boot/grub2/grub.cfg.bak
grub2-mkconfig -o /boot/grub2/grub.cfg
# 重启
reboot
----
开机后查看内核是否升级成功,显示版本>=`4.9` 则成功
[console,bash]
----
uname -r
----
加载内核模块
[console,bash]
----
# 加载内核模块
modprobe tcp_bbr
echo "tcp_bbr" | tee --append /etc/modules-load.d/modules.conf
# 确认加载
lsmod | grep bbr

# 设置网络参数
echo "net.core.default_qdisc=fq" >> /etc/sysctl.conf
echo "net.ipv4.tcp_congestion_control=bbr" >> /etc/sysctl.conf
# 生效配置
sysctl -p

# 检验参数。如果结果都有 bbr, 则证明你的内核已开启 BBR。
sysctl net.ipv4.tcp_available_congestion_control
sysctl net.ipv4.tcp_congestion_control
----

=== 安装
[console,bash]
----
# 更新OpenSSL证书 /etc/pki/tls/certs/ca-bundle.crt
yum update -y openssl

# 安装ss依赖
yum install -y python-pip python python-setuptools python-devel libffi-devel openssl-devel gcc
pip install --upgrade pip
pip install --upgrade ordereddict backport-ipaddress setuptools urllib3
pip install pyopenssl ndg-httpsclient pyasn
pip install shadowsocks
----

=== 配置
ss配置,`server_port` 为ss服务端口, 这里用的2333,`password` 为服务密码,建议设置16位随机密码<<password>>
[console,bash]
----
cat << EOF >/etc/shadowsocks.json
{
    "server":"0.0.0.0",
    "server_port":2333,
    "password":"password",
    "timeout":300,
    "method":"aes-256-cfb",
    "fast_open":false,
    "workers":3
}
EOF
----

配置ss服务
[console,bash]
----
cat <<EOF > /usr/lib/systemd/system/shadowsocks.service
[Unit]
Description=Shadowsocks Service
After=network.target

[Service]
Type=simple
User=nobody
PIDFile=/tmp/shadowsocks.pid
ExecStart=/usr/bin/ssserver -c /etc/shadowsocks.json --log-file /var/log/shadowsocks.log --pid-file /tmp/shadowsocks.pid -d start

[Install]
WantedBy=multi-user.target
EOF

# 设置文件权限
touch /var/log/shadowsocks.log
chown nobody /var/log/shadowsocks.log

----

启动ss服务
[console,bash]
----
# 设置开机启动
systemctl enable shadowsocks
# 启动ss服务
systemctl start shadowsocks
# 查看ss服务状态
systemctl status shadowsocks
----

=== 防火墙（可选）
[console,bash]
----
firewall-cmd --zone=public --add-port=2333/tcp --permanent
firewall-cmd --reload
----
这里 `2333` 是你的ss服务端口, 自行设置

== 客户端安装及配置

=== windows
https://github.com/shadowsocks/shadowsocks-windows/releases
下载压缩包, 解压添加服务器帐号密码可用

=== linux

安装客户端
[console,bash]
----
pip3 install shadowsocks
----

配置客户端
[console,bash]
这里 `ip` 是服务器ip,`2333` 是你的ss服务端口,`password` 是服务端密码,自行设置
----
mkdir /etc/shadowsocks
cat << EOF >/etc/shadowsocks/jp.json
{
    "server":"202.182.113.95",
    "server_port":233,
    "local_address":"0.0.0.0",
    "local_port":1080,
    "password":"password",
    "timeout":300,
    "method":"aes-256-cfb",
    "fast_open":false,
    "workers":3
}
EOF
----


客户端配置service
[console,bash]
----
cat << EOF >/usr/lib/systemd/system/shadowsocks@.service

[Unit]
Description=Shadowsocks Client Service
After=network.target

[Service]
Type=simple
User=nobody
ExecStart=/usr/bin/sslocal -c /etc/shadowsocks/%i.json

[Install]
WantedBy=multi-user.target
EOF
----

客户端ss服务命令
[console,bash]
----
# 设置开机启动
systemctl enable shadowsocks
# 启动ss服务
systemctl start shadowsocks
# 查看ss服务状态
systemctl status shadowsocks
[console,bash]
----
== 密码生成
[[[password]]]
[console,bash]
----
yum install -y pwgen
pwgen -n 16|head -n 1
----
